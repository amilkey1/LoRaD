library(testthat)
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
test_that("multiplication works", {
expect_unequal(2 * 2, 4)
})
test_that("multiplication works", {
expect_equal(2 * 3, 4)
})
devtools::load_all("../")
library(testthat)
library(lorad)
source("R/lorad-estimate.R")
source("R/lorad-calc-log-sum.R")
source("R/lorad-standardize-estimation-sample.R")
getwd()
setwd("/Users/analisamilkey/Documents/projects/LoRaD/LoRaD/R")
source("R/lorad-estimate.R")
setwd("/Users/analisamilkey/Documents/projects/LoRaD/LoRaD")
source("R/lorad-estimate.R")
source("R/lorad-calc-log-sum.R")
source("R/lorad-standardize-estimation-sample.R")
source("R/lorad-standardize.R")
source("R/lorad-transform.R")
test_that("colspec is set up correctly", {
# Create a data frame holding the parameter sample
params <- read.table('test/k80-samples.txt', header=TRUE)
# Create a data frame holding the column specifications
colspec <- c("iter"="iteration", "log.kernel"="posterior", "edgelen"="positive", "kappa"="positive")
# test for no error
expect_no_error(lorad_estimate(params, colspec, 0.5, "left", 0.1))
})
test_that("colspec is missing a param", {
# Create a data frame holding the parameter sample
params <- read.table('test/k80-samples.txt', header=TRUE)
# Create a data frame holding the column specifications
colspec <- c("iter"="iteration", "log.kernel"="posterior", "edgelen"="positive")
# test for any error
expect_error(lorad_estimate(params, colspec, 0.5, "left", 0.1))
})
# Create a data frame holding the parameter sample
params <- read.table('test/k80-samples.txt', header=TRUE)
# Create a data frame holding the column specifications
colspec <- c("iter"="iteration", "log.kernel"="posterior", "edgelen"="positive")
# test for any error
expect_error(lorad_estimate(params, colspec, 0.5, "left", 0.1))
test_colspec <- "iter=iteration", "log.kernel="posterior""
test_colspec <- "iter=iteration", "log.kernel="posterior"
test_that("colspec is missing a param", {
# Create a data frame holding the parameter sample
params <- read.table('test/k80-samples.txt', header=TRUE)
# Create a data frame holding the column specifications
colspec <- c("iter"="iteration", "log.kernel"="posterior", "edgelen"="positive")
# test for any error
expect_error(lorad_estimate(params, colspec, 0.5, "left", 0.1), "no")
})
test_that("colspec is missing a param", {
# Create a data frame holding the parameter sample
params <- read.table('test/k80-samples.txt', header=TRUE)
# Create a data frame holding the column specifications
colspec <- c()
# test for any error
expect_error(lorad_estimate(params, colspec, 0.5, "left", 0.1), "no")
})
devtools::load_all("../")
getwed()
getwd()
devtools::load_all("../")
setwd("..")
devtools::load_all("../")
setwd("LoRaD/R")
devtools::load_all("../")
devtools::load_all("../")
setwd("/Users/analisamilkey/Documents/projects/LoRaD/LoRaD/tests")
devtools::load_all("../")
setwd("/Users/analisamilkey/Documents/projects/LoRaD/LoRaD/tests/testthat")
devtools::load_all("../")
